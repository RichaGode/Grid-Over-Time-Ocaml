### Starting build.
# Target: test1.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:test1.ml, ocaml, ocamldep, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamldep.opt -modules test1.ml > test1.ml.depends # cached
# Target: ast.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:ast.ml, ocaml, ocamldep, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamldep.opt -modules ast.ml > ast.ml.depends # cached
# Target: ast.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:ast.cmo, file:ast.ml, implem, ocaml, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlc.opt -c -w +a-4 -o ast.cmo ast.ml # cached
# Target: parser.mly, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:mly, file:parser.mly, infer, ocaml, ocamlyacc, parser, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlyacc parser.mly # cached
# Target: parser.mli.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:mli, file:parser.mli, ocaml, ocamldep, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamldep.opt -modules parser.mli > parser.mli.depends # cached
# Target: parser.cmi, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:mli, file:parser.mli, interf, ocaml, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlc.opt -c -w +a-4 -o parser.cmi parser.mli # cached
# Target: scanner.mll, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:mll, file:scanner.mll, lexer, ocaml, ocamllex, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamllex.opt -q scanner.mll # cached
# Target: scanner.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:scanner.ml, ocaml, ocamldep, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamldep.opt -modules scanner.ml > scanner.ml.depends # cached
# Target: scanner.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:scanner.cmo, file:scanner.ml, implem, ocaml, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlc.opt -c -w +a-4 -o scanner.cmo scanner.ml # cached
# Target: test1.cmo, tags: { package(llvm), package(llvm.analysis), warn(+a-4), byte, compile, extension:cmo, extension:ml, file:test1.cmo, file:test1.ml, implem, ocaml, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlc.opt -c -w +a-4 -o test1.cmo test1.ml # cached
# Target: ast.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:ast.cmx, file:ast.ml, implem, native, ocaml, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlopt.opt -c -w +a-4 -o ast.cmx ast.ml # cached
# Target: parser.ml.depends, tags: { package(llvm), package(llvm.analysis), warn(+a-4), extension:ml, file:parser.ml, ocaml, ocamldep, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamldep.opt -modules parser.ml > parser.ml.depends # cached
# Target: parser.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:parser.cmx, file:parser.ml, implem, native, ocaml, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlopt.opt -c -w +a-4 -o parser.cmx parser.ml # cached
# Target: scanner.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:scanner.cmx, file:scanner.ml, implem, native, ocaml, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlopt.opt -c -w +a-4 -o scanner.cmx scanner.ml # cached
# Target: test1.cmx, tags: { package(llvm), package(llvm.analysis), warn(+a-4), compile, extension:cmx, extension:ml, file:test1.cmx, file:test1.ml, implem, native, ocaml, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlopt.opt -c -w +a-4 -o test1.cmx test1.ml # cached
# Target: test1.native, tags: { package(llvm), package(llvm.analysis), warn(+a-4), dont_link_with, extension:native, file:test1.native, link, native, ocaml, program, quiet, traverse }
/Users/dangode/.opam/4.03.0/bin/ocamlopt.opt ast.cmx parser.cmx scanner.cmx test1.cmx -o test1.native # cached
# Compilation successful.
